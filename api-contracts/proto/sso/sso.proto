syntax = "proto3";

package auth;

// Настройки для генерации Go кода.
option go_package = "hierarch.messageService.v1.ssov1";

// Auth is service for managing permissions and roles.
service Auth {
  // Register -> registers a new user.
  rpc Register (RegisterRequest) returns (RegisterResponse);
  // Login -> login a user and returns an auth token.
  rpc Login (LoginRequest) returns (LoginResponse);
  // RestorePassword  -> restore user password by email
  rpc RestorePassword (RestorePasswordRequest) returns (RestorePasswordResponse);
  // IsAdmin -> check is user an admin.
  rpc IsAdmin (IsAdminRequest) returns (IsAdminResponse);
  // Logout -> func to logout the user.
  rpc Logout (LogoutRequest) returns (LogoutResponse);
}
message RegisterRequest {
  string email = 1; // Email of the user to register.
  string password = 2; // Password of the user to register.
}

message RegisterResponse {
  int64 user_id = 1; // User ID of the registered user.
}

message LoginRequest {
  string email = 1; // Email of the user to login.
  string password = 2; // Password of the user to login.
  int32 app_id = 3; // ID of the app to login to.
}

message LoginResponse {
  string token = 1; // Auth token of the logged in user.
}

message RestorePasswordRequest {
  string email = 1; // Email of the user to restore password for.
}

message RestorePasswordResponse {
  string token = 1; // Restore token for restoring the password.
}

message IsAdminRequest {
  int64 user_id = 1; // User ID to validate.
}

message IsAdminResponse {
  bool is_admin = 1; // Indicates whether the user is an admin.
}

message LogoutRequest {
  string token = 1; // Auth token of the user to logout.
}

message LogoutResponse {
  bool success = 1; // Indicates whether the logout was successful.
}
